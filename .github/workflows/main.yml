# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [master]
  #pull_request:
  #  branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        type: environment
        required: true     

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install doctl.
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Build a Docker image of your application in your registry and tag the image with the $GITHUB_SHA.
      - name: Build container image
        run: docker build --no-cache -t registry.digitalocean.com/earthpoints/earthpoints-poc:$(echo $GITHUB_SHA | head -c7) -t registry.digitalocean.com/earthpoints/earthpoints-poc:latest-${{ github.event.inputs.environment }} .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry as versioned
        run: docker push registry.digitalocean.com/earthpoints/earthpoints-poc:$(echo $GITHUB_SHA | head -c7)

      - name: Push image to DigitalOcean Container Registry as lastest
        run: docker push registry.digitalocean.com/earthpoints/earthpoints-poc:latest-${{ github.event.inputs.environment }}

      # Deploy to DigitalOCcean Kubernetes.
      - name: Update image name in deployment
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|:latest-${{ github.event.inputs.environment }}|:'${TAG}'|' $GITHUB_WORKSPACE/kuber-app-${{ github.event.inputs.environment }}.yml

      - name: Update image name in statefulset
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|:latest-${{ github.event.inputs.environment }}|:'${TAG}'|' $GITHUB_WORKSPACE/kuber-que-${{ github.event.inputs.environment }}.yml

      - name: Update date in deployment
        run: sed -ie "s/<DATE>/$(date)/g" $GITHUB_WORKSPACE/kuber-app-${{ github.event.inputs.environment }}.yml

      - name: Update date in statefulset
        run: sed -ie "s/<DATE>/$(date)/g" $GITHUB_WORKSPACE/kuber-que-${{ github.event.inputs.environment }}.yml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ffb1a5d5-e0c7-4553-87d2-db6633465a6d

      - name: Apply Deployment to Cluster
        run: kubectl apply -n=${{ github.event.inputs.environment }} -f $GITHUB_WORKSPACE/kuber-app-${{ github.event.inputs.environment }}.yml

      - name: Apply Statefulset to Cluster
        run: kubectl apply -n=${{ github.event.inputs.environment }} -f $GITHUB_WORKSPACE/kuber-que-${{ github.event.inputs.environment }}.yml

      - name: Verify deployment
        run: kubectl rollout status -n=${{ github.event.inputs.environment }} deployment/earthpoints-poc